name: tauri-CI
on:
  push:
    paths:
      - 'tauri/**'
      - '.github/workflows/tauri.yml'
  workflow_run:
    workflows: Java-CI

jobs:
  build-tauri:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: 'Download latest successful build artifact'
        run: |
          gh_last_success_run_id=$(gh run list -w $WORKFLOW --json conclusion,headBranch,databaseId --jq 'first(.[] | select(.conclusion | contains("success"))) | .databaseId')
          [ -z "$gh_last_success_run_id" ] && echo "No successful run found" && exit 1 || true
          gh run download $gh_last_success_run_id -n $ARTIFACT_NAME -D $OUTPUT_DIR
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          WORKFLOW: .github/workflows/maven.yaml
          ARTIFACT_NAME: native-image-sidecar
          OUTPUT_DIR: .
      - name: deploy backend
        run: |
          mkdir tauri/src-tauri/backend
          mkdir tauri/src-tauri/backend/lib
          copy -path "*.dll" ./tauri/src-tauri/backend
          copy -path "*.exe" ./tauri/src-tauri/backend
          copy -path "./lib/font*" ./tauri/src-tauri/backend/lib
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: latest
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      - name: Install dependencies
        run: |
          cd tauri
          bun install
          bun tauri build
      - uses: actions/upload-artifact@v4
        with:
          name: installer
          path: ./tauri/src-tauri/target/release/bundle/nsis/*.exe
