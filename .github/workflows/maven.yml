# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branche:
      - core/**

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: maven
      - name: postgresql setup
        uses: ikalnytskyi/action-setup-postgres@v4
        with:
          username: admin
          password: admin
          database: test
          port: 5433
        id: postgres
      - name: Build with Maven
        run: mvn clean package -PIntegrationTest
      - name: Create TestReport
        if: always()
        run: mvn allure:report -fcore/pom.xml
        shell: cmd
      - name: Upload TestReport
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unitTestReport
          path: ./core/target/site
      - name: Upload jar
        uses: actions/upload-artifact@v4
        with:
          name: executableJar
          path: ./core/target/**jar-with-dependencies.jar
      - name: Upload GUI jar
        uses: actions/upload-artifact@v4
        with:
          name: gui executableJar
          path: ./gui/target/**jar-with-dependencies.jar

  native-build:
    needs: [ build ]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - name: Build with Maven
        run: mvn clean package -Pnative
      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: |
            ./core/target/java.dll
            ./core/target/jvm.dll
            ./core/target/dbunit-cli.exe

  report-deploy:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Ô∏è
        uses: actions/checkout@v4
      - name: Download unitTestReport
        uses: actions/download-artifact@v4
        with:
          name: unitTestReport
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: 'allure-maven-plugin'