package $package$;

import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.contrib.java.lang.system.ExpectedSystemExit;
import org.junit.rules.ExpectedException;

public class $Class$Test extends AbstractTestSuperClass {

    @Rule
    public ExpectedException expectedException = ExpectedException.none();
    @Rule
    public ExpectedSystemExit exit = ExpectedSystemExit.none();

    private $Class$ target = new $Class$();

    @Before
    public void setUp() {
        super.setUp();
    }

$if(method1)$
    @override
    public void someMethodTest(){
        this.exit.expectSystemExitWithStatus(1);
        this.expectedException.expect(AssertionError.class);
        target.someMethod();
        $expression$;
        $assert$;
    }

$endif$
$if(method2)$
    @override
    public void someMethod2Test(){
        this.exit.expectSystemExitWithStatus(1);
        this.expectedException.expect(AssertionError.class);
        target.someMethod2();
        int actual = $value1$ * $value2$ * 2;
        assertEquals($value4$ ,actual);
    }

$endif$
}